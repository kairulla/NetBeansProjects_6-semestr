/*
* Разработка классов и интерфейсов:
* 1) Сделать собственный класс1 с полями, конструкторами, сеттерами/геттерами, методом toString
* 2) Сделать копию класса1 под другим именем класс2. Добавить в класс2 дополнительные методы класса
* 3) Сделать копию класса1 под именем класс3. Создать для класса3 интерфейс, подключить этот интерфейс в класс3. 
*    Добавить в класс3 дополнительные методы класса, часть из них не реализовать в классе3, сделав его абстрактным
* 4) Сделать новый класс4 как наследник класса3. Реализовать все абстрактные методы, 
*    переопределить некоторые родительские методы от класса3
*    Для каждого пункта сделать все необходимые демонстрации работы с классами
 */
package kz.kre.watch;


public class WatchCalendar extends WatchSimple {

    
    
}
